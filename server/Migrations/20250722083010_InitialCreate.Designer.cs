// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yes.Data;

#nullable disable

namespace Yes.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250722083010_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("Yes.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contact_info")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Courtesy_title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Full_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone_number")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = "C_0001",
                            Age = 30,
                            Courtesy_title = "Mr.",
                            Full_name = "John Doe",
                            Phone_number = "1234567890"
                        },
                        new
                        {
                            Id = "C_0002",
                            Age = 28,
                            Courtesy_title = "Ms.",
                            Full_name = "Jane Smith",
                            Phone_number = "0987654321"
                        },
                        new
                        {
                            Id = "C_0003",
                            Age = 35,
                            Courtesy_title = "Mrs.",
                            Full_name = "Emily Johnson",
                            Phone_number = "1112223333"
                        },
                        new
                        {
                            Id = "C_0004",
                            Age = 40,
                            Courtesy_title = "Mr.",
                            Full_name = "Michael Brown",
                            Phone_number = "2223334444"
                        },
                        new
                        {
                            Id = "C_0005",
                            Age = 27,
                            Courtesy_title = "Ms.",
                            Full_name = "Linda Davis",
                            Phone_number = "3334445555"
                        },
                        new
                        {
                            Id = "C_0006",
                            Age = 50,
                            Courtesy_title = "Dr.",
                            Full_name = "Robert Wilson",
                            Phone_number = "4445556666"
                        },
                        new
                        {
                            Id = "C_0007",
                            Age = 22,
                            Courtesy_title = "Miss",
                            Full_name = "Sophia Martinez",
                            Phone_number = "5556667777"
                        });
                });

            modelBuilder.Entity("Yes.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "R_001",
                            Title = "Manager"
                        },
                        new
                        {
                            Id = "R_002",
                            Title = "Receptionist"
                        },
                        new
                        {
                            Id = "R_003",
                            Title = "Staff"
                        });
                });

            modelBuilder.Entity("Yes.Models.Room", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("RoomType_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoomType_id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = "RM_001",
                            Label = "A1",
                            RoomType_id = "RT_001",
                            Status = 0
                        },
                        new
                        {
                            Id = "RM_002",
                            Label = "A2",
                            RoomType_id = "RT_001",
                            Status = 0
                        },
                        new
                        {
                            Id = "RM_003",
                            Label = "A3",
                            RoomType_id = "RT_001",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Yes.Models.RoomTicket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CheckInDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CheckOutDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Customer_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number_of_occupants")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Room_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Customer_id");

                    b.HasIndex("Room_id");

                    b.ToTable("RoomTickets");
                });

            modelBuilder.Entity("Yes.Models.RoomType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = "RT_001",
                            Description = "A room for one person, equipped with a single bed.",
                            Name = "Single",
                            Price = 500000
                        },
                        new
                        {
                            Id = "RT_002",
                            Description = "A room for two people, equipped with a double bed.",
                            Name = "Double",
                            Price = 750000
                        },
                        new
                        {
                            Id = "RT_003",
                            Description = "A more spacious room with additional amenities, suitable for couples or small families.",
                            Name = "Deluxe",
                            Price = 900000
                        },
                        new
                        {
                            Id = "RT_004",
                            Description = "A luxurious room with separate living and sleeping areas, ideal for longer stays or special occasions.",
                            Name = "Suite",
                            Price = 1000000
                        });
                });

            modelBuilder.Entity("Yes.Models.Service", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = "SVC_001",
                            Name = "Cleaning",
                            Price = 0
                        },
                        new
                        {
                            Id = "SVC_002",
                            Name = "Laundry",
                            Price = 0
                        },
                        new
                        {
                            Id = "SVC_003",
                            Name = "Spa",
                            Price = 75000
                        },
                        new
                        {
                            Id = "SVC_004",
                            Name = "Restaurant",
                            Price = 0
                        });
                });

            modelBuilder.Entity("Yes.Models.ServiceTicket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Customer_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Room_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Service_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Customer_id");

                    b.HasIndex("Room_id");

                    b.HasIndex("Service_id");

                    b.ToTable("ServiceTickets");
                });

            modelBuilder.Entity("Yes.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Role_id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "U_001",
                            Description = "Hotel Manager",
                            Password = "$2a$11$.2V271Z9m2yiNjX1K/.jhefV3.fthIA1c4bZFZIxW6sVXFQACxhEu",
                            Role_id = "R_001",
                            Username = "Manager"
                        },
                        new
                        {
                            Id = "U_002",
                            Description = "Front Desk Receptionist",
                            Password = "$2a$11$TNYb8jcMW1w2aBefYxE8Q.3vD0HB/JXJkLtQXftzxxBadYtKfXwHe",
                            Role_id = "R_002",
                            Username = "Receptionist"
                        },
                        new
                        {
                            Id = "U_003",
                            Description = "Hotel Staff",
                            Password = "$2a$11$aIRdRpgVNW98VT33HB.Ohuc7NuXIUOm8ROr5PSg9hSsdwmPG4gu8y",
                            Role_id = "R_003",
                            Username = "Staff"
                        });
                });

            modelBuilder.Entity("Yes.Models.Room", b =>
                {
                    b.HasOne("Yes.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomType_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Yes.Models.RoomTicket", b =>
                {
                    b.HasOne("Yes.Models.Customer", "Customer")
                        .WithMany("RoomTickets")
                        .HasForeignKey("Customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yes.Models.Room", "Room")
                        .WithMany("RoomTickets")
                        .HasForeignKey("Room_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Yes.Models.ServiceTicket", b =>
                {
                    b.HasOne("Yes.Models.Customer", "Customer")
                        .WithMany("ServiceTickets")
                        .HasForeignKey("Customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yes.Models.Room", "Room")
                        .WithMany("ServiceTickets")
                        .HasForeignKey("Room_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yes.Models.Service", "Service")
                        .WithMany("ServiceTickets")
                        .HasForeignKey("Service_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Room");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Yes.Models.User", b =>
                {
                    b.HasOne("Yes.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("Role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Yes.Models.Customer", b =>
                {
                    b.Navigation("RoomTickets");

                    b.Navigation("ServiceTickets");
                });

            modelBuilder.Entity("Yes.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Yes.Models.Room", b =>
                {
                    b.Navigation("RoomTickets");

                    b.Navigation("ServiceTickets");
                });

            modelBuilder.Entity("Yes.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Yes.Models.Service", b =>
                {
                    b.Navigation("ServiceTickets");
                });
#pragma warning restore 612, 618
        }
    }
}
